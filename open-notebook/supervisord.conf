[unix_http_server]
file=/tmp/supervisor.sock

[supervisord]
logfile=/tmp/supervisord.log
logfile_maxbytes=50MB
logfile_backups=10
loglevel=info
pidfile=/tmp/supervisord.pid
nodaemon=true
minfds=1024
minprocs=200

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///tmp/supervisor.sock

[program:api]
command=python3 run_api.py
directory=/app/open-notebook-src
autostart=true
autorestart=true
stderr_logfile=/var/log/api.err.log
stdout_logfile=/var/log/api.out.log
environment=USE_POSTGRESQL="true",SKIP_SURREALDB_MIGRATION="true",API_PORT="8000",HOST="0.0.0.0",PORT="8000",PYTHONPATH="/app/open-notebook-src"
startsecs=10
startretries=3
user=root
priority=100

[program:streamlit_safe]
command=python3 /app/streamlit_safe.py
directory=/app/open-notebook-src
autostart=false
autorestart=false
stderr_logfile=/var/log/streamlit_safe.err.log
stdout_logfile=/var/log/streamlit_safe.out.log
environment=USE_POSTGRESQL="true",SKIP_SURREALDB_MIGRATION="true",PYTHONPATH="/app/open-notebook-src",STREAMLIT_SERVER_HEADLESS="true",STREAMLIT_SERVER_ENABLE_CORS="false",STREAMLIT_SERVER_ENABLE_XSRF_PROTECTION="false",STREAMLIT_BROWSER_GATHER_USAGE_STATS="false",STREAMLIT_SERVER_RUN_ON_SAVE="false",STREAMLIT_SERVER_ENABLE_WEBSOCKET_COMPRESSION="false",STREAMLIT_GLOBAL_DEVELOPMENT_MODE="false",PYTHONOPTIMIZE="1",PYTHONDONTWRITEBYTECODE="1"
startsecs=20
startretries=2
user=root
priority=200
stopsignal=TERM
stopwaitsecs=30

[program:fallback_server]
command=python3 /app/fallback_server.py
directory=/app/open-notebook-src
autostart=true
autorestart=true
stderr_logfile=/var/log/fallback.err.log
stdout_logfile=/var/log/fallback.out.log
environment=USE_POSTGRESQL="true",SKIP_SURREALDB_MIGRATION="true",PYTHONPATH="/app/open-notebook-src"
startsecs=10
startretries=3
user=root
priority=300

[eventlistener:streamlit_monitor]
command=python3 -c "
import sys
import time
import subprocess
from supervisor import childutils

def write_stdout(s):
    sys.stdout.write(s)
    sys.stdout.flush()

def write_stderr(s):
    sys.stderr.write(s)
    sys.stderr.flush()

def main():
    while True:
        write_stderr('READY\\n')
        line = sys.stdin.readline()
        write_stderr(f'Received: {line}')
        
        headers = childutils.get_headers(line)
        payload = sys.stdin.read(int(headers['len']))
        
        if headers['eventname'] == 'PROCESS_STATE_FATAL':
            if 'streamlit_safe' in payload:
                write_stderr('Streamlit failed with SIGILL, starting fallback server\\n')
                subprocess.run(['supervisorctl', 'start', 'fallback_server'])
        
        write_stderr('RESULT 2\\nOK')

if __name__ == '__main__':
    main()
"
events=PROCESS_STATE_FATAL
stderr_logfile=/var/log/monitor.err.log
stdout_logfile=/var/log/monitor.out.log
